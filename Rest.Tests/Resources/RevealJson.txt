{
  "swagger": "2.0",
  "info": {
    "version": "V2",
    "title": "Reveal API",
    "description": "<a href=\"http://www.revealdata.com/\">Learn more &raquo;</a>",
    "x-swagger-net-version": "8.3.25.001"
  },
  "host": "salient-eu.revealdata.com",
  "basePath": "/rest",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/archive/{caseId}/{archiveId}": {
      "get": {
        "tags": [
          "Archive"
        ],
        "summary": "Get a presigned url downloading an archive",
        "operationId": "Archive_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "Reveal case Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "archiveId",
            "in": "path",
            "description": "Archive Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "downloadManagerVersion",
            "in": "query",
            "description": "Reveal Download Manager Version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Presigned URL",
            "schema": {
              "$ref": "#/definitions/ArchiveDownload"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/cases": {
      "get": {
        "tags": [
          "Cases"
        ],
        "summary": "Get all cases",
        "operationId": "Cases_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Array of Case objects",
            "schema": {
              "items": {
                "$ref": "#/definitions/Case"
              },
              "xml": {
                "name": "Case",
                "wrapped": true
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Cases"
        ],
        "summary": "Update an existing case",
        "operationId": "Cases_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "objCase",
            "in": "body",
            "description": "Case object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Case"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Case object",
            "schema": {
              "$ref": "#/definitions/Case"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Cases"
        ],
        "summary": "Create a new case",
        "operationId": "Cases_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "objCase",
            "in": "body",
            "description": "Case object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Case"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Case object",
            "schema": {
              "$ref": "#/definitions/Case"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Cases"
        ],
        "summary": "Delete a case (Not implemented)",
        "operationId": "Cases_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "501": {
            "description": "NotImplemented"
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/cases/{caseId}": {
      "get": {
        "tags": [
          "Cases"
        ],
        "summary": "Get a single case",
        "operationId": "Cases_GetApiCasesByCaseId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "Reveal case Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Case object",
            "schema": {
              "$ref": "#/definitions/Case"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/cases/GetLoginToken": {
      "post": {
        "tags": [
          "Cases"
        ],
        "summary": "Get a log in token for review tool",
        "operationId": "Cases_RequestLoginToken",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "objCaseLogin",
            "in": "body",
            "description": "LoginTokenRequest object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CaseLoginTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "LogIn Token object",
            "schema": {
              "$ref": "#/definitions/CaseLoginTokenResponse"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/cases/Statistics": {
      "post": {
        "tags": [
          "Cases"
        ],
        "summary": "Get statistics for a case",
        "operationId": "Cases_GetCaseStatistics",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "objCaseStatsRequest",
            "in": "body",
            "description": "CaseStatisticsRequest object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CaseStatisticsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of CaseStatisticsResponse objects",
            "schema": {
              "items": {
                "$ref": "#/definitions/CaseStatisticsResponse"
              },
              "xml": {
                "name": "CaseStatisticsResponse",
                "wrapped": true
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/cases/LookupLoginToken": {
      "get": {
        "tags": [
          "Cases"
        ],
        "summary": "Lookup a login token. This is used to get the current logged in user and case for a login token created in the review web interface",
        "operationId": "Cases_LookupLoginToken",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Login Token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "LookupTokenResponse object",
            "schema": {
              "$ref": "#/definitions/LookupTokenResponse"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/cases/DatabaseTemplates": {
      "get": {
        "tags": [
          "Cases"
        ],
        "summary": "Get a list of field templates used to create a case",
        "operationId": "Cases_GetCaseDatabaseTemplates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Array of project database template objects",
            "schema": {
              "items": {
                "$ref": "#/definitions/CaseDatabaseTemplate"
              },
              "xml": {
                "name": "CaseDatabaseTemplate",
                "wrapped": true
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/Clients": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Gets a list of all clients.",
        "operationId": "Clients_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "List of clients",
            "schema": {
              "items": {
                "$ref": "#/definitions/Client"
              },
              "xml": {
                "name": "Client",
                "wrapped": true
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "operationId": "Clients_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "client",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Creates a new client.",
        "operationId": "Clients_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "client",
            "in": "body",
            "description": "Client model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Returns the created client",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Clients"
        ],
        "operationId": "Clients_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/Clients/{id}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Gets info about a single client using id.",
        "operationId": "Clients_GetApiClientsById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Desired client number",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Single client",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/company": {
      "get": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Array of Company objects for which user is an admin",
            "schema": {
              "items": {
                "$ref": "#/definitions/Company"
              },
              "xml": {
                "name": "Company",
                "wrapped": true
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/dataLoading": {
      "get": {
        "tags": [
          "DataLoading"
        ],
        "summary": "Gets a list of loading jobs",
        "operationId": "DataLoading_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of DataLoaderJob",
            "schema": {
              "items": {
                "$ref": "#/definitions/DataLoaderJob"
              },
              "xml": {
                "name": "DataLoaderJob",
                "wrapped": true
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "DataLoading"
        ],
        "summary": "Load documents into case from import file",
        "operationId": "DataLoading_LoadData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "loadfile",
            "in": "query",
            "description": "Load file name (fully qualified path)",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldMappingId",
            "in": "query",
            "description": "Optional. Field mapping Id or 0 to use first mapping found in case",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "DataLoaderJob",
            "schema": {
              "$ref": "#/definitions/DataLoaderJob"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/dataLoading/{id}": {
      "get": {
        "tags": [
          "DataLoading"
        ],
        "summary": "Gets the status of a loading job and errors (if any)",
        "operationId": "DataLoading_GetApiDataLoadingById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Loading job Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "DataLoaderJob",
            "schema": {
              "$ref": "#/definitions/DataLoaderJob"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "DataLoading"
        ],
        "summary": "Cancel a loading job",
        "operationId": "DataLoading_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Loading job Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/dataLoading/logfile": {
      "get": {
        "tags": [
          "DataLoading"
        ],
        "summary": "Get the loading log file. There is only one loading log that contains infomation about the last loading job.",
        "operationId": "DataLoading_GetLogFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Log file text",
            "schema": {
              "type": "string"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/document": {
      "post": {
        "tags": [
          "Document"
        ],
        "operationId": "Document_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "documentsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/document/SetDocumentText": {
      "post": {
        "tags": [
          "Document"
        ],
        "operationId": "Document_SetDocumentText",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyField",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "setTextRequest",
            "in": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/SetDocumentTextRequest"
              },
              "xml": {
                "name": "SetDocumentTextRequest",
                "wrapped": true
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/DocumentTextSets": {
      "get": {
        "tags": [
          "DocumentTextSet"
        ],
        "summary": "Get all Document Text Sets in a case",
        "operationId": "DocumentTextSet_GetAllTextSets",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "DocumentTextSet"
        ],
        "summary": "Update an existing Document Text Set",
        "operationId": "DocumentTextSet_UpdateTextSet",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "textSet",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentTextSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "DocumentTextSet"
        ],
        "summary": "Create a new Document Text Set",
        "operationId": "DocumentTextSet_CreateTextSet",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "textSet",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentTextSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/DocumentTextSets/{id}": {
      "get": {
        "tags": [
          "DocumentTextSet"
        ],
        "summary": "Get a single Document Text Set in a case",
        "operationId": "DocumentTextSet_GetSingleTextSet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "DocumentTextSet"
        ],
        "summary": "Delete a Document Text Set",
        "operationId": "DocumentTextSet_DeleteTextSet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/field": {
      "get": {
        "tags": [
          "Field"
        ],
        "summary": "Get a list of all fields in IMPORT_METADATA / IMPORT_DOCUMENTS",
        "operationId": "Field_GetAllFields",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Field"
        ],
        "summary": "Update an existing field by field name or Id in the Field object. Id is used first. If its 0, then the field name is used to lookup the field.",
        "operationId": "Field_UpdateField",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "field",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Field"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Field"
        ],
        "summary": "Create a new field",
        "operationId": "Field_CreateField",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "field",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Field"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Field"
        ],
        "summary": "Delete a field by FIELD NAME",
        "operationId": "Field_DeleteField",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fieldName",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/field/name/{fieldName}": {
      "get": {
        "tags": [
          "Field"
        ],
        "summary": "Get information about a single field by name (name as part of the path)",
        "operationId": "Field_GetFieldByName",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fieldName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/field/{id}": {
      "get": {
        "tags": [
          "Field"
        ],
        "summary": "Get information about a single field by FIELD ID",
        "operationId": "Field_GetFieldById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Field"
        ],
        "summary": "Delete a field by FIELD ID",
        "operationId": "Field_DeleteApiFieldById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/field/overlay": {
      "post": {
        "tags": [
          "Field"
        ],
        "summary": "Overlay field values into IMPORT_DOCUMENTS table. Use either FieldId or FieldName to specify the fields to update",
        "operationId": "Field_OverLayFields",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "overlayRequests",
            "in": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/OverLayRequest"
              },
              "xml": {
                "name": "OverLayRequest",
                "wrapped": true
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/field/clear": {
      "put": {
        "tags": [
          "Field"
        ],
        "summary": "Clear values in IMPORT_DOCUMENTS for a field by FIELD NAME",
        "operationId": "Field_ClearField",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fieldName",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/field/clear/{id}": {
      "put": {
        "tags": [
          "Field"
        ],
        "summary": "Clear values in IMPORT_DOCUMENTS for a field by FIELD ID",
        "operationId": "Field_PutApiFieldClearById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/field/documentIds": {
      "get": {
        "tags": [
          "Field"
        ],
        "summary": "Get the list of all document ids in the case (ITEMID or BEGDOC values).\r\nOn the first call start offset should be 0 or 1, on subsequent calls it should be \"count of results received + 1\"\r\nIf you receive less records than the batchsize you sent in (unless you sent in 0) then you are done.",
        "operationId": "Field_GetDocumentIds",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "keyField",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startRow",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "batchSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Field"
        ],
        "summary": "Get a list of document ids (ITEMID or BEGDOC values) for a field that have a certain value. \r\nSpecify the desired matching field value or specify null or \"null\" or \"not null\" as special values.\r\nThe keyfield can be either \"ITEMID\" or \"BEGDOC\"\r\nOn the first call start offset should be 0 or 1, on subsequent calls it should be \"count of results received + 1\"\r\nIf you receive less records than the batchsize you sent in (unless you sent in 0) then you are done.",
        "operationId": "Field_PostApiFieldDocumentIds",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "keyField",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startRow",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "batchSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "field",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/FieldMapping": {
      "get": {
        "tags": [
          "FieldMapping"
        ],
        "summary": "Get a list of field mappings in a case",
        "operationId": "FieldMapping_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "List of field mappings",
            "schema": {
              "items": {
                "$ref": "#/definitions/FieldMapping"
              },
              "xml": {
                "name": "FieldMapping",
                "wrapped": true
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "FieldMapping"
        ],
        "summary": "Update a field mapping",
        "operationId": "FieldMapping_ModifyFieldMapping",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "mapping",
            "in": "body",
            "description": "FieldMappingInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FieldMappingInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Field mapping info",
            "schema": {
              "$ref": "#/definitions/FieldMappingInfo"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "FieldMapping"
        ],
        "summary": "Create a new field mapping",
        "operationId": "FieldMapping_CreateNewFieldMapping",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "mapping",
            "in": "body",
            "description": "FieldMappingInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FieldMappingInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Field mapping info",
            "schema": {
              "$ref": "#/definitions/FieldMappingInfo"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/FieldMapping/{id}": {
      "get": {
        "tags": [
          "FieldMapping"
        ],
        "summary": "Get a single field mapping in a case",
        "operationId": "FieldMapping_GetApiFieldMappingById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Field mapping Id to retrieve",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Field mapping info",
            "schema": {
              "$ref": "#/definitions/FieldMappingInfo"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "FieldMapping"
        ],
        "summary": "Delete a field mapping",
        "operationId": "FieldMapping_DeleteFieldMapping",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Field mapping Id to retrieve",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/fieldProfile/{profileId}": {
      "put": {
        "tags": [
          "FieldProfile"
        ],
        "summary": "Associate fields and corresponding sort orders to a field profile",
        "operationId": "FieldProfile_AssociateWithFields",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fieldIds",
            "in": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/FieldIdVisibleAssociation"
              },
              "xml": {
                "name": "FieldIdVisibleAssociation",
                "wrapped": true
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "NoContent"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "FieldProfile"
        ],
        "summary": "Delete an existing field profile",
        "operationId": "FieldProfile_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "NoContent"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/fieldProfile/fields/add": {
      "put": {
        "tags": [
          "FieldProfile"
        ],
        "summary": "Adds fields to a field profile",
        "operationId": "FieldProfile_AssociateWithFields2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "profileId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fieldIds",
            "in": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/FieldIdVisibleAssociation"
              },
              "xml": {
                "name": "FieldIdVisibleAssociation",
                "wrapped": true
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "NoContent"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/fieldProfile/fields/delete": {
      "put": {
        "tags": [
          "FieldProfile"
        ],
        "summary": "Removes fields from a field profile",
        "operationId": "FieldProfile_UnAssociateWithFields",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "profileId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fieldIds",
            "in": "body",
            "required": true,
            "schema": {
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "NoContent"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/FieldProfile": {
      "get": {
        "tags": [
          "FieldProfile"
        ],
        "summary": "Get a list of all field profiles for a case",
        "operationId": "FieldProfile_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "FieldProfile"
        ],
        "summary": "Update an existing field profile",
        "operationId": "FieldProfile_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fieldProfile",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FieldProfileUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "FieldProfileUpdate object",
            "schema": {
              "$ref": "#/definitions/FieldProfileUpdate"
            }
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "FieldProfile"
        ],
        "summary": "Create a new field profile",
        "operationId": "FieldProfile_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fieldProfile",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FieldProfileCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "FieldProfileCreate object",
            "schema": {
              "$ref": "#/definitions/FieldProfileCreate"
            }
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/Groups": {
      "get": {
        "tags": [
          "Groups"
        ],
        "operationId": "Groups_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "List of user groups",
            "schema": {
              "items": {
                "$ref": "#/definitions/Group"
              },
              "xml": {
                "name": "Group",
                "wrapped": true
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/imageSet/{imageSetId}": {
      "get": {
        "tags": [
          "ImageSet"
        ],
        "summary": "Get an image set",
        "operationId": "ImageSet_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "imageSetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "ImageSet object",
            "schema": {
              "$ref": "#/definitions/ImageSet"
            }
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/ImageSet": {
      "get": {
        "tags": [
          "ImageSet"
        ],
        "summary": "Get a list of image sets",
        "operationId": "ImageSet_GetApiImageSet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseid",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of ImageSet objects",
            "schema": {
              "items": {
                "$ref": "#/definitions/ImageSet"
              },
              "xml": {
                "name": "ImageSet",
                "wrapped": true
              },
              "type": "array"
            }
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "ImageSet"
        ],
        "summary": "Create a new image set",
        "operationId": "ImageSet_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "imageSet",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageSetCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ImageSetCreate object",
            "schema": {
              "$ref": "#/definitions/ImageSetCreate"
            }
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/importBatch": {
      "get": {
        "tags": [
          "ImportBatch"
        ],
        "operationId": "ImportBatch_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/importBatch/documentIds": {
      "get": {
        "tags": [
          "ImportBatch"
        ],
        "operationId": "ImportBatch_GetDocumentIds",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "keyField",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startRow",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "batchSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/Indexing": {
      "get": {
        "tags": [
          "Indexing"
        ],
        "summary": "Get a list of indexing jobs in a case",
        "operationId": "Indexing_GetIndexingJobs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "status",
            "in": "query",
            "description": "-1-Any, 0-Created, 1-Submitted, 2-In Process, 3-Complete, 4-Error, 5-Cancelled, 6-Cancel Pending, 7-Deleted, 8-Modified",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "List of IndexJobs",
            "schema": {
              "items": {
                "$ref": "#/definitions/IndexJob"
              },
              "xml": {
                "name": "IndexJob",
                "wrapped": true
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Indexing"
        ],
        "summary": "Create a new index job",
        "operationId": "Indexing_CreateIndexJob",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "jobCreate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndexJobCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "IndexJob",
            "schema": {
              "$ref": "#/definitions/IndexJob"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/Indexing/{id}": {
      "get": {
        "tags": [
          "Indexing"
        ],
        "summary": "Get a single Index Job in a case",
        "operationId": "Indexing_GetSingleIndexJob",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "IndexJob",
            "schema": {
              "$ref": "#/definitions/IndexJob"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Indexing"
        ],
        "summary": "Cancel an index job. This does not delete the job from the database.",
        "operationId": "Indexing_CancelIndexJob",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/Indexing/Indexes": {
      "get": {
        "tags": [
          "Indexing"
        ],
        "summary": "Get a list of indexes in a case",
        "operationId": "Indexing_GetIndexes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "List of IndexInfo objects",
            "schema": {
              "items": {
                "$ref": "#/definitions/IndexInfo"
              },
              "xml": {
                "name": "IndexInfo",
                "wrapped": true
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/Indexing/Errors/{id}": {
      "get": {
        "tags": [
          "Indexing"
        ],
        "summary": "Get indexing errors",
        "operationId": "Indexing_GetIndexingErrors",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Indexing job Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "List of IndexingErrors",
            "schema": {
              "items": {
                "$ref": "#/definitions/IndexingError"
              },
              "xml": {
                "name": "IndexingError",
                "wrapped": true
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/Indexing/DocumentIds/{id}": {
      "get": {
        "tags": [
          "Indexing"
        ],
        "summary": "Get document ids for an indexing job",
        "operationId": "Indexing_GetIndexJobDocumentIds",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Indexing job Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyField",
            "in": "query",
            "description": "ITEMID or BEGDOC",
            "required": true,
            "type": "string"
          },
          {
            "name": "startRow",
            "in": "query",
            "description": "Starting row offset. Use 0 for first request",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "batchSize",
            "in": "query",
            "description": "Chunksize of records to return",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Document Ids for an Indexing Job",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/jobDownload/{caseId}/{downloadGuid}": {
      "get": {
        "tags": [
          "JobDownloadManagement"
        ],
        "operationId": "JobDownloadManagement_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "downloadGuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "downloadManagerVersion",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Presigned URL",
            "schema": {
              "$ref": "#/definitions/JobDownload"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/license": {
      "get": {
        "tags": [
          "License"
        ],
        "summary": "Get license information\r\nURL: GET api/license",
        "operationId": "License_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "License"
        ],
        "summary": "Update license\r\n URL: PUT api/license",
        "operationId": "License_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "licenseUpdate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LicenseUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/Login": {
      "get": {
        "tags": [
          "Login"
        ],
        "summary": "Login",
        "operationId": "Login_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/NexLP/jobs": {
      "get": {
        "tags": [
          "NexLP"
        ],
        "summary": "Get a list of NexLP processing jobs in a case",
        "operationId": "NexLP_GetNexLPJobs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "status",
            "in": "query",
            "description": "-1-Any, 0-Created, 1-Submitted, 2-In Process, 3-Complete, 4-Error, 5-Cancelled, 6-Cancel Pending, 7-Deleted, 8-Modified",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "List of NexLP processing jobs",
            "schema": {
              "items": {
                "$ref": "#/definitions/NexLPJob"
              },
              "xml": {
                "name": "NexLPJob",
                "wrapped": true
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/NexLP/jobs/{id}": {
      "get": {
        "tags": [
          "NexLP"
        ],
        "summary": "Get a single NexLP Job in a case",
        "operationId": "NexLP_GetSingleNexLPJob",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "NexLPJob",
            "schema": {
              "$ref": "#/definitions/NexLPJob"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/NexLP/jobs/documentIds/{id}": {
      "get": {
        "tags": [
          "NexLP"
        ],
        "summary": "Get the list of document ids for a NexLP processing job.\r\nOn the first call start offset should be 0 or 1, on subsequent calls it should be \"count of results received + 1\"\r\nIf you receive less records than the batchsize you sent in (unless you sent in 0) then you are done.",
        "operationId": "NexLP_GetNexLPJobDocumentIds",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Reveal NexLP job Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyField",
            "in": "query",
            "description": "ITEMID or BEGDOC",
            "required": true,
            "type": "string"
          },
          {
            "name": "startRow",
            "in": "query",
            "description": "Starting row offset. Use 0 for first request",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "batchSize",
            "in": "query",
            "description": "Chunksize of records to return",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "List of document Ids for a NexLP processing job",
            "schema": {
              "items": {
                "$ref": "#/definitions/NexLPJobItem"
              },
              "xml": {
                "name": "NexLPJobItem",
                "wrapped": true
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/processing/updateuploadjob": {
      "post": {
        "tags": [
          "Processing"
        ],
        "summary": "Update an upload job",
        "operationId": "Processing_UpdateUploadJob",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "jobUpdate",
            "in": "body",
            "description": "UploadJobUpdate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadJobUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/processing/reports": {
      "get": {
        "tags": [
          "Processing"
        ],
        "summary": "Get upload job processing reports",
        "operationId": "Processing_GetUploadJobReports",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "jobId",
            "in": "query",
            "description": "Job Id GUID",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/UploadJobReport"
              },
              "xml": {
                "name": "UploadJobReport",
                "wrapped": true
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Processing"
        ],
        "summary": "Creates or replaces an upload job processing report",
        "operationId": "Processing_InsertUploadJobReport",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "report",
            "in": "body",
            "description": "UploadJobReport object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadJobReportDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UploadJobReportCreateUpdateResponse"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Processing"
        ],
        "summary": "Delete all upload job processing reports for a job",
        "operationId": "Processing_DeleteUploadJobReports",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "jobId",
            "in": "query",
            "description": "Job Id GUID",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/processing/reports/{reportId}": {
      "get": {
        "tags": [
          "Processing"
        ],
        "summary": "Get a single upload job processing report",
        "operationId": "Processing_GetUploadJobReport",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "Report ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "caseId",
            "in": "query",
            "description": "Reveal case Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UploadJobReportDetails"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/s3upload/auth": {
      "get": {
        "tags": [
          "S3Upload"
        ],
        "operationId": "S3Upload_GetS3Signature",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "to_sign",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "datetime",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "canonical_request",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/s3upload/manifest": {
      "post": {
        "tags": [
          "S3Upload"
        ],
        "operationId": "S3Upload_PostManifest",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "manifest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/S3_Manifest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/tagPane/create": {
      "post": {
        "tags": [
          "TagPane"
        ],
        "operationId": "TagPane_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "TagPane",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagPaneCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/tagPane/item/create": {
      "post": {
        "tags": [
          "TagPane"
        ],
        "operationId": "TagPane_PostApiTagPaneItemCreate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "TagPaneItem",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagPaneItemCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/tagPane/delete": {
      "delete": {
        "tags": [
          "TagPane"
        ],
        "operationId": "TagPane_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "profileName",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "paneName",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/TagPane": {
      "get": {
        "tags": [
          "TagPane"
        ],
        "operationId": "TagPane_GetTagPanes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "profileName",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/TagPane/{id}": {
      "get": {
        "tags": [
          "TagPane"
        ],
        "operationId": "TagPane_GetSingleTagSet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "profileName",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/tagProfile/create": {
      "post": {
        "tags": [
          "TagProfile"
        ],
        "operationId": "TagProfile_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tagProfile",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagProfileCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/tagProfile/delete": {
      "delete": {
        "tags": [
          "TagProfile"
        ],
        "operationId": "TagProfile_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/TagProfile": {
      "get": {
        "tags": [
          "TagProfile"
        ],
        "operationId": "TagProfile_GetTagProfiles",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/TagProfile/{id}": {
      "get": {
        "tags": [
          "TagProfile"
        ],
        "operationId": "TagProfile_GetSingleTagSet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/tags/documentIds": {
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_GetDocumentIds",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "keyField",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startRow",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "batchSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "ignoreAccessRights",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_PostApiTagsDocumentIds",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "keyField",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ids",
            "in": "body",
            "required": true,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "name": "ignoreAccessRights",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/tags/documentIds/add": {
      "post": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_AddDocumentIds",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "keyField",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "body",
            "required": true,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "name": "ignoreAccessRights",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/tags/documentIds/delete": {
      "post": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_DeleteDocumentIds",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "keyField",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "body",
            "required": true,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "name": "ignoreAccessRights",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/tags/documentIds/clear": {
      "post": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_ClearDocumentIds",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "ignoreAccessRights",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/tags/create": {
      "post": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tagSetName",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/tags/edit2": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Edit a tag (cannot modify its tag set)\r\nThe only things that can be changes are the name, description, and the IsPrivilege flag",
        "operationId": "Tags_Edit",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tag",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/tags/edit": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Edit a tag with the ability to change its position in a tag set. The tag name, description, and the IsPrivilege flag can be changed.\r\nThe tags parent and display order can be changed in the tag set. It cannot be moved to a different tag set. Specify 0 to not change any tag set info.",
        "operationId": "Tags_PostApiTagsEdit",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tagSetId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tag",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/tags/delete": {
      "delete": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tagSetName",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tagName",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/tags/documentIds/reviewed": {
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_GetReviewedDocuments",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reviewedSince",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tagProfileId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "keyField",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startRow",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "batchSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ignoreAccessRights",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/tagSets/create": {
      "post": {
        "tags": [
          "TagSets"
        ],
        "operationId": "TagSets_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tagSet",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagSetCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/tagSets/edit": {
      "post": {
        "tags": [
          "TagSets"
        ],
        "operationId": "TagSets_Edit",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tagSet",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/tagSets/delete": {
      "delete": {
        "tags": [
          "TagSets"
        ],
        "operationId": "TagSets_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/TagSets": {
      "get": {
        "tags": [
          "TagSets"
        ],
        "operationId": "TagSets_GetTagSets",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/TagSets/{id}": {
      "get": {
        "tags": [
          "TagSets"
        ],
        "operationId": "TagSets_GetSingleTagSet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/team": {
      "get": {
        "tags": [
          "Team"
        ],
        "operationId": "Team_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/team/create": {
      "post": {
        "tags": [
          "Team"
        ],
        "operationId": "Team_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "team",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/team/delete": {
      "delete": {
        "tags": [
          "Team"
        ],
        "operationId": "Team_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "operationId": "Users_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user",
        "operationId": "Users_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/Users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get information about a particular user",
        "operationId": "Users_GetApiUsersById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/Version": {
      "get": {
        "tags": [
          "Version"
        ],
        "operationId": "Version_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/wordlist": {
      "get": {
        "tags": [
          "WordList"
        ],
        "operationId": "WordList_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "List of WordList objects",
            "schema": {
              "items": {
                "$ref": "#/definitions/WordList"
              },
              "xml": {
                "name": "WordList",
                "wrapped": true
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "WordList"
        ],
        "operationId": "WordList_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "wordListEntity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WordListCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "WordList object",
            "schema": {
              "$ref": "#/definitions/WordListCreate"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/workFolder/rootId": {
      "get": {
        "tags": [
          "WorkFolder"
        ],
        "operationId": "WorkFolder_GetRootFolder",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/workFolder": {
      "get": {
        "tags": [
          "WorkFolder"
        ],
        "operationId": "WorkFolder_GetSubFolders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/workFolder/documentIds": {
      "get": {
        "tags": [
          "WorkFolder"
        ],
        "operationId": "WorkFolder_GetDocumentIds",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "keyField",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startRow",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "batchSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/workFolder/documentIds/add": {
      "post": {
        "tags": [
          "WorkFolder"
        ],
        "operationId": "WorkFolder_AddDocumentIds",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "keyField",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "body",
            "required": true,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "name": "ignoreReadOnly",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/workFolder/documentIds/delete": {
      "post": {
        "tags": [
          "WorkFolder"
        ],
        "operationId": "WorkFolder_DeleteDocumentIds",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "keyField",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "body",
            "required": true,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "name": "ignoreReadOnly",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/workFolder/documentIds/clear": {
      "post": {
        "tags": [
          "WorkFolder"
        ],
        "operationId": "WorkFolder_ClearDocumentIds",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "ignoreReadOnly",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/workFolder/create": {
      "post": {
        "tags": [
          "WorkFolder"
        ],
        "operationId": "WorkFolder_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "folder",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkFolderCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/workFolder/edit": {
      "post": {
        "tags": [
          "WorkFolder"
        ],
        "operationId": "WorkFolder_Edit",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "updateACL",
            "in": "query",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "folder",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkFolderCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    },
    "/api/workFolder/delete": {
      "delete": {
        "tags": [
          "WorkFolder"
        ],
        "operationId": "WorkFolder_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "InControlAuthToken": [
              ""
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "ArchiveDownload": {
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "urls": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "xml": {
        "name": "ArchiveDownload"
      },
      "type": "object"
    },
    "Case": {
      "properties": {
        "CaseId": {
          "type": "integer",
          "format": "int32"
        },
        "CaseName": {
          "type": "string"
        },
        "ClientNumber": {
          "type": "string"
        },
        "ProjectId": {
          "type": "string"
        },
        "DatabaseTemplateId": {
          "type": "integer",
          "format": "int32"
        },
        "ClientId": {
          "type": "integer",
          "format": "int64"
        },
        "ClientName": {
          "type": "string"
        },
        "CompanyId": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyName": {
          "type": "string"
        },
        "CaseTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "PartyTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "CreatedUserId": {
          "type": "integer",
          "format": "int64"
        },
        "ModifiedUserId": {
          "type": "integer",
          "format": "int64"
        },
        "CreatedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "ModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "SearchEngineType": {
          "type": "integer",
          "format": "int32"
        },
        "TwoFactorAuth": {
          "type": "boolean"
        },
        "DocumentLevelSecurity": {
          "type": "boolean"
        },
        "ArtificialIntelligence": {
          "type": "boolean"
        },
        "ArtificialIntelligenceId": {
          "type": "integer",
          "format": "int64"
        },
        "Timezone": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Case"
      },
      "type": "object"
    },
    "CaseLoginTokenRequest": {
      "properties": {
        "CaseId": {
          "type": "integer",
          "format": "int32"
        },
        "UserName": {
          "type": "string"
        },
        "CurrentTime": {
          "type": "string"
        },
        "DigitalSignature": {
          "type": "string"
        }
      },
      "xml": {
        "name": "CaseLoginTokenRequest"
      },
      "type": "object"
    },
    "CaseLoginTokenResponse": {
      "properties": {
        "AuthToken": {
          "type": "string"
        }
      },
      "xml": {
        "name": "CaseLoginTokenResponse"
      },
      "type": "object"
    },
    "CaseStatisticsRequest": {
      "properties": {
        "CaseId": {
          "type": "integer",
          "format": "int32"
        },
        "LatestOnly": {
          "type": "boolean"
        },
        "StartDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "EndDateTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "CaseStatisticsRequest"
      },
      "type": "object"
    },
    "CaseStatisticsResponse": {
      "properties": {
        "CaseId": {
          "type": "integer",
          "format": "int32"
        },
        "NativeCount": {
          "type": "integer",
          "format": "int64"
        },
        "ImageCount": {
          "type": "integer",
          "format": "int64"
        },
        "NativeSize": {
          "type": "number",
          "format": "double"
        },
        "ImagesSize": {
          "type": "number",
          "format": "double"
        },
        "DocumentsSize": {
          "type": "number",
          "format": "double"
        },
        "DatabaseSize": {
          "type": "number",
          "format": "double"
        },
        "ProductionSize": {
          "type": "number",
          "format": "double"
        },
        "ProductionImageCount": {
          "type": "integer",
          "format": "int64"
        },
        "IndexSize": {
          "type": "number",
          "format": "double"
        },
        "UserCount": {
          "type": "integer",
          "format": "int64"
        },
        "LoggedInUserCount": {
          "type": "integer",
          "format": "int64"
        },
        "NativeErrorCount": {
          "type": "integer",
          "format": "int64"
        },
        "ImageErrorCount": {
          "type": "integer",
          "format": "int64"
        },
        "ProductionImageErrorCount": {
          "type": "integer",
          "format": "int64"
        },
        "EndDatetime": {
          "type": "string",
          "format": "date-time"
        },
        "StartDatetime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "CaseStatisticsResponse"
      },
      "type": "object"
    },
    "LookupTokenResponse": {
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "userName": {
          "type": "string"
        },
        "caseId": {
          "type": "integer",
          "format": "int32"
        },
        "caseName": {
          "type": "string"
        },
        "databaseId": {
          "type": "integer",
          "format": "int32"
        },
        "databaseName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "LookupTokenResponse"
      },
      "type": "object"
    },
    "CaseDatabaseTemplate": {
      "properties": {
        "TemplateId": {
          "type": "integer",
          "format": "int32"
        },
        "TemplateName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "CaseDatabaseTemplate"
      },
      "type": "object"
    },
    "Client": {
      "properties": {
        "ClientName": {
          "description": "The name of the client",
          "type": "string"
        },
        "ClientId": {
          "description": "The database id of the client",
          "type": "integer",
          "format": "int32"
        },
        "ClientNumber": {
          "description": "The client number",
          "type": "string"
        },
        "AddressLine1": {
          "description": "The first address line of the client",
          "type": "string"
        },
        "AddressLine2": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "ZipCode": {
          "type": "string"
        },
        "MainOfficePhoneNumber": {
          "type": "string"
        },
        "PrimaryPhoneNumber": {
          "type": "string"
        },
        "SecondaryPhoneNumber": {
          "type": "string"
        },
        "FaxNumber": {
          "type": "string"
        },
        "Notes": {
          "type": "string"
        },
        "ContactFirstName": {
          "type": "string"
        },
        "ContactLastName": {
          "type": "string"
        },
        "ContactTitle": {
          "type": "string"
        },
        "ContactDepartment": {
          "type": "string"
        },
        "StateId": {
          "type": "integer",
          "format": "int32"
        },
        "CreatedUserId": {
          "type": "integer",
          "format": "int32"
        },
        "ModifiedUserId": {
          "type": "integer",
          "format": "int32"
        },
        "CreatedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "ModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "ApiErrorMessage": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Client"
      },
      "type": "object"
    },
    "Company": {
      "properties": {
        "CompanyId": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Company"
      },
      "type": "object"
    },
    "DataLoaderJob": {
      "properties": {
        "ErrorList": {
          "items": {
            "$ref": "#/definitions/DataLoaderError"
          },
          "xml": {
            "name": "DataLoaderError",
            "wrapped": true
          },
          "type": "array"
        },
        "JobId": {
          "type": "integer",
          "format": "int32"
        },
        "JobName": {
          "type": "string"
        },
        "BeginNumber": {
          "type": "string"
        },
        "EndNumber": {
          "type": "string"
        },
        "Status": {
          "type": "integer",
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
          ]
        },
        "TotalDocuments": {
          "type": "integer",
          "format": "int32"
        },
        "Progress": {
          "type": "integer",
          "format": "int32"
        },
        "StartedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "EndedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "DocumentsProcessed": {
          "type": "integer",
          "format": "int32"
        },
        "ProcessingErrors": {
          "type": "integer",
          "format": "int32"
        },
        "JobType": {
          "type": "integer",
          "format": "int32",
          "enum": [
            0,
            1
          ]
        },
        "CurrentTask": {
          "type": "integer",
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ]
        },
        "CaseId": {
          "type": "integer",
          "format": "int32"
        },
        "LoadFileName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "DataLoaderJob"
      },
      "type": "object"
    },
    "DataLoaderError": {
      "properties": {
        "JobId": {
          "type": "integer",
          "format": "int32"
        },
        "ItemId": {
          "type": "integer",
          "format": "int64"
        },
        "BegDoc": {
          "type": "string"
        },
        "ErrorText": {
          "type": "string"
        },
        "ErrorType": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "DataLoaderError"
      },
      "type": "object"
    },
    "DocumentsRequest": {
      "properties": {
        "keyField": {
          "type": "string"
        },
        "combineDateTimeFields": {
          "type": "boolean"
        },
        "useFieldNames": {
          "type": "boolean"
        },
        "fieldProfileName": {
          "type": "string"
        },
        "documentIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "documentFields": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "DocumentsRequest"
      },
      "type": "object"
    },
    "SetDocumentTextRequest": {
      "properties": {
        "DocId": {
          "type": "string"
        },
        "DocumentTextSetId": {
          "type": "integer",
          "format": "int32"
        },
        "DocumentText": {
          "type": "string"
        }
      },
      "xml": {
        "name": "SetDocumentTextRequest"
      },
      "type": "object"
    },
    "DocumentTextSet": {
      "properties": {
        "DocumentTextSetId": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "IndexName": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "LoadFileFieldName": {
          "type": "string"
        },
        "StopWordsType": {
          "type": "string"
        },
        "AnalyzerType": {
          "type": "string"
        },
        "MaxSizeToIndexExcel": {
          "type": "integer",
          "format": "int64"
        },
        "MaxSizeToIndexMSWord": {
          "type": "integer",
          "format": "int64"
        },
        "MaxSizeToIndexMSPP": {
          "type": "integer",
          "format": "int64"
        },
        "MaxSizeToIndexPDF": {
          "type": "integer",
          "format": "int64"
        },
        "MaxSizeToIndexOther": {
          "type": "integer",
          "format": "int64"
        },
        "OtherFileTypesToLimitText": {
          "type": "string"
        }
      },
      "xml": {
        "name": "DocumentTextSet"
      },
      "type": "object"
    },
    "Field": {
      "properties": {
        "FieldId": {
          "type": "integer",
          "format": "int32"
        },
        "FieldName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "DataType": {
          "type": "string"
        },
        "MaxLength": {
          "type": "integer",
          "format": "int32"
        },
        "DataTypeDesc": {
          "type": "string"
        },
        "IsTranscriptLookup": {
          "type": "boolean"
        },
        "IsSearchable": {
          "type": "boolean"
        },
        "IsUpdatable": {
          "type": "boolean"
        },
        "IsProductionUpdatable": {
          "type": "boolean"
        },
        "IsMultiValue": {
          "type": "boolean"
        },
        "IsCustomField": {
          "type": "boolean"
        },
        "IsImportable": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "Field"
      },
      "type": "object"
    },
    "OverLayRequest": {
      "properties": {
        "fields": {
          "items": {
            "$ref": "#/definitions/DocumentField"
          },
          "xml": {
            "name": "DocumentField",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "OverLayRequest"
      },
      "type": "object"
    },
    "DocumentField": {
      "properties": {
        "fieldId": {
          "type": "integer",
          "format": "int32"
        },
        "fieldName": {
          "type": "string"
        },
        "fieldValue": {
          "type": "object"
        }
      },
      "xml": {
        "name": "DocumentField"
      },
      "type": "object"
    },
    "FieldMapping": {
      "properties": {
        "MappingId": {
          "type": "integer",
          "format": "int32"
        },
        "MappingName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "FieldMapping"
      },
      "type": "object"
    },
    "FieldMappingInfo": {
      "properties": {
        "MappingId": {
          "type": "integer",
          "format": "int32"
        },
        "MappingName": {
          "type": "string"
        },
        "Fields": {
          "items": {
            "$ref": "#/definitions/FieldMappingField"
          },
          "xml": {
            "name": "FieldMappingField",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "FieldMappingInfo"
      },
      "type": "object"
    },
    "FieldMappingField": {
      "properties": {
        "FieldId": {
          "type": "integer",
          "format": "int32"
        },
        "FieldName": {
          "type": "string"
        },
        "FieldOrderInImportFile": {
          "type": "integer",
          "format": "int32"
        },
        "FieldReferenceInImportFile": {
          "type": "integer",
          "format": "int32"
        },
        "TemplateField": {
          "type": "string"
        },
        "TemplateAutoField": {
          "type": "string"
        }
      },
      "xml": {
        "name": "FieldMappingField"
      },
      "type": "object"
    },
    "FieldIdVisibleAssociation": {
      "properties": {
        "FieldId": {
          "type": "integer",
          "format": "int64"
        },
        "IsVisible": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "FieldIdVisibleAssociation"
      },
      "type": "object"
    },
    "FieldProfileCreate": {
      "properties": {
        "ProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "integer",
          "format": "int32"
        },
        "IsDefault": {
          "type": "boolean"
        },
        "Teams": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "FieldProfileCreate"
      },
      "type": "object"
    },
    "FieldProfileUpdate": {
      "properties": {
        "ProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ModifiedBy": {
          "type": "integer",
          "format": "int32"
        },
        "IsDefault": {
          "type": "boolean"
        },
        "Teams": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "FieldProfileUpdate"
      },
      "type": "object"
    },
    "Group": {
      "properties": {
        "GroupId": {
          "type": "integer",
          "format": "int32"
        },
        "GroupName": {
          "type": "string"
        },
        "GroupDescription": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Group"
      },
      "type": "object"
    },
    "ImageSet": {
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string"
        },
        "IsVisible": {
          "type": "boolean"
        },
        "LastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "ImageSet"
      },
      "type": "object"
    },
    "ImageSetCreate": {
      "properties": {
        "Name": {
          "type": "string"
        },
        "IsVisible": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "ImageSetCreate"
      },
      "type": "object"
    },
    "IndexJob": {
      "properties": {
        "JobId": {
          "type": "integer",
          "format": "int32"
        },
        "JobName": {
          "type": "string"
        },
        "JobStatus": {
          "type": "integer",
          "format": "int32"
        },
        "JobStatusName": {
          "type": "string"
        },
        "TotalNumberOfDocuments": {
          "type": "integer",
          "format": "int64"
        },
        "CreatedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "CreatedByUser": {
          "type": "integer",
          "format": "int64"
        },
        "ModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "ModifiedByUser": {
          "type": "integer",
          "format": "int64"
        },
        "StartDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "EndDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "PercentComplete": {
          "type": "integer",
          "format": "int32"
        },
        "ServiceURL": {
          "type": "string"
        },
        "JobInfoMessage": {
          "type": "string"
        },
        "Priority": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "IndexJob"
      },
      "type": "object"
    },
    "IndexJobCreate": {
      "properties": {
        "JobName": {
          "type": "string"
        },
        "CreatedByUser": {
          "type": "integer",
          "format": "int64"
        },
        "ImportFileNames": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "KeyField": {
          "type": "string"
        },
        "DocumentIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "TextSetIds": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "Notifications": {
          "items": {
            "$ref": "#/definitions/IndexJobNotification"
          },
          "xml": {
            "name": "IndexJobNotification",
            "wrapped": true
          },
          "type": "array"
        },
        "Priority": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "IndexJobCreate"
      },
      "type": "object"
    },
    "IndexJobNotification": {
      "properties": {
        "Type": {
          "type": "integer",
          "format": "int32"
        },
        "SendTo": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "IndexJobNotification"
      },
      "type": "object"
    },
    "IndexInfo": {
      "properties": {
        "IndexName": {
          "type": "string"
        },
        "ImportFileName": {
          "type": "string"
        },
        "DocumentCount": {
          "type": "integer",
          "format": "int64"
        },
        "Enabled": {
          "type": "boolean"
        },
        "Completed": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "IndexInfo"
      },
      "type": "object"
    },
    "IndexingError": {
      "properties": {
        "TextSetName": {
          "type": "string"
        },
        "ItemId": {
          "type": "integer",
          "format": "int64"
        },
        "BEGDOC": {
          "type": "string"
        },
        "FileName": {
          "type": "string"
        },
        "ConvertError": {
          "type": "string"
        },
        "IndexError": {
          "type": "string"
        }
      },
      "xml": {
        "name": "IndexingError"
      },
      "type": "object"
    },
    "JobDownload": {
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "urls": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "xml": {
        "name": "JobDownload"
      },
      "type": "object"
    },
    "LicenseUpdate": {
      "properties": {
        "licenseKey": {
          "type": "string"
        },
        "licenseTo": {
          "type": "string"
        }
      },
      "xml": {
        "name": "LicenseUpdate"
      },
      "type": "object"
    },
    "NexLPJob": {
      "properties": {
        "JobId": {
          "type": "integer",
          "format": "int32"
        },
        "JobName": {
          "type": "string"
        },
        "JobStatus": {
          "type": "integer",
          "format": "int32"
        },
        "JobStatusName": {
          "type": "string"
        },
        "TotalNumberOfDocuments": {
          "type": "integer",
          "format": "int32"
        },
        "NumberOfDocumentsAdded": {
          "type": "integer",
          "format": "int32"
        },
        "NumberOfDocumentsUpdated": {
          "type": "integer",
          "format": "int32"
        },
        "NumberOfDocumentsDeleted": {
          "type": "integer",
          "format": "int32"
        },
        "NumberOfProcessingErrors": {
          "type": "integer",
          "format": "int32"
        },
        "CreatedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "CreatedByUser": {
          "type": "integer",
          "format": "int64"
        },
        "StartDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "EndDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "JobInfoMessage": {
          "type": "string"
        },
        "NIAJobId": {
          "type": "string"
        }
      },
      "xml": {
        "name": "NexLPJob"
      },
      "type": "object"
    },
    "NexLPJobItem": {
      "properties": {
        "DocId": {
          "type": "string"
        },
        "Operation": {
          "type": "integer",
          "format": "int32"
        },
        "AIDocId": {
          "type": "integer",
          "format": "int32"
        },
        "DocumentTextSetId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "NexLPJobItem"
      },
      "type": "object"
    },
    "UploadJobUpdate": {
      "properties": {
        "Job_Id": {
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "Documents_Extracted": {
          "type": "integer",
          "format": "int64"
        },
        "Documents_Loaded": {
          "type": "integer",
          "format": "int64"
        },
        "Status": {
          "type": "string"
        },
        "Status_text": {
          "type": "string"
        },
        "Manifest_json": {
          "type": "string"
        },
        "Workflow": {
          "type": "string"
        },
        "Duplicate_Documents": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "UploadJobUpdate"
      },
      "type": "object"
    },
    "UploadJobReport": {
      "properties": {
        "Report_Id": {
          "type": "integer",
          "format": "int32"
        },
        "Job_Id": {
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "Report_Name": {
          "type": "string"
        },
        "Content_Type": {
          "type": "string"
        }
      },
      "xml": {
        "name": "UploadJobReport"
      },
      "type": "object"
    },
    "UploadJobReportDetails": {
      "properties": {
        "Report_Content": {
          "type": "string"
        },
        "Extension": {
          "type": "string"
        },
        "Report_Id": {
          "type": "integer",
          "format": "int32"
        },
        "Job_Id": {
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "Report_Name": {
          "type": "string"
        },
        "Content_Type": {
          "type": "string"
        }
      },
      "xml": {
        "name": "UploadJobReportDetails"
      },
      "type": "object"
    },
    "UploadJobReportCreateUpdateResponse": {
      "properties": {
        "Report_id": {
          "type": "integer",
          "format": "int32"
        },
        "Job_Id": {
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "UploadJobReportCreateUpdateResponse"
      },
      "type": "object"
    },
    "S3_Manifest": {
      "properties": {
        "Client": {
          "$ref": "#/definitions/Client_Manifest"
        },
        "Files": {
          "items": {
            "$ref": "#/definitions/Files_Manifest"
          },
          "xml": {
            "name": "Files_Manifest",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "S3_Manifest"
      },
      "type": "object"
    },
    "Client_Manifest": {
      "properties": {
        "ClientID": {
          "type": "string"
        },
        "ProjectID": {
          "type": "string"
        },
        "JobName": {
          "type": "string"
        },
        "JobGUID": {
          "type": "string"
        },
        "JobPath": {
          "type": "string"
        },
        "S3Path": {
          "type": "string"
        },
        "Custodian": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Client_Manifest"
      },
      "type": "object"
    },
    "Files_Manifest": {
      "properties": {
        "ID": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Size": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Files_Manifest"
      },
      "type": "object"
    },
    "TagPaneCreate": {
      "properties": {
        "ProfileName": {
          "type": "string"
        },
        "PaneName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "DisplayOrder": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "TagPaneCreate"
      },
      "type": "object"
    },
    "TagPaneItemCreate": {
      "properties": {
        "TagProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "TagPaneId": {
          "type": "integer",
          "format": "int32"
        },
        "ParentId": {
          "type": "integer",
          "format": "int32"
        },
        "ItemType": {
          "type": "integer",
          "format": "int32"
        },
        "TagId": {
          "type": "integer",
          "format": "int32"
        },
        "TagSetId": {
          "type": "integer",
          "format": "int32"
        },
        "FieldName": {
          "type": "string"
        },
        "FieldLabel": {
          "type": "string"
        },
        "DisplayOrder": {
          "type": "integer",
          "format": "int32"
        },
        "IsReviewed": {
          "type": "boolean"
        },
        "IsDefault": {
          "type": "boolean"
        },
        "FieldRequired": {
          "type": "boolean"
        },
        "SelectionRequired": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "TagPaneItemCreate"
      },
      "type": "object"
    },
    "TagProfileCreate": {
      "properties": {
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "DisplayOrder": {
          "type": "integer",
          "format": "int32"
        },
        "ACLs": {
          "items": {
            "$ref": "#/definitions/AccessControlTagProfile"
          },
          "xml": {
            "name": "AccessControlTagProfile",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "TagProfileCreate"
      },
      "type": "object"
    },
    "AccessControlTagProfile": {
      "properties": {
        "Type": {
          "type": "integer",
          "format": "int32"
        },
        "Value": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "AccessControlTagProfile"
      },
      "type": "object"
    },
    "TagCreate": {
      "properties": {
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ParentTagId": {
          "type": "integer",
          "format": "int32"
        },
        "DisplayOrder": {
          "type": "integer",
          "format": "int32"
        },
        "IsPrivileged": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "TagCreate"
      },
      "type": "object"
    },
    "TagSetCreate": {
      "properties": {
        "Name": {
          "type": "string"
        },
        "Type": {
          "type": "integer",
          "format": "int32"
        },
        "IsRecursive": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "TagSetCreate"
      },
      "type": "object"
    },
    "TagSet": {
      "properties": {
        "TagSetId": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string"
        },
        "Type": {
          "type": "integer",
          "format": "int32"
        },
        "IsRecursive": {
          "type": "boolean"
        },
        "Tags": {
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "xml": {
            "name": "Tag",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "TagSet"
      },
      "type": "object"
    },
    "Tag": {
      "properties": {
        "TagId": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string"
        },
        "IsPrivileged": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "Tag"
      },
      "type": "object"
    },
    "TeamCreate": {
      "properties": {
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "UserIds": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "TeamCreate"
      },
      "type": "object"
    },
    "User": {
      "properties": {
        "UserName": {
          "type": "string"
        },
        "UserId": {
          "type": "integer",
          "format": "int64"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "EmailAddress": {
          "type": "string"
        },
        "PrimaryPhoneNumber": {
          "type": "string"
        },
        "GroupId": {
          "type": "integer",
          "format": "int32"
        },
        "GroupName": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "LanguageId": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyId": {
          "type": "integer",
          "format": "int32"
        },
        "Title": {
          "type": "string"
        },
        "CaseId": {
          "type": "integer",
          "format": "int32"
        },
        "Password": {
          "type": "string"
        },
        "TwoFactorAuth": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "User"
      },
      "type": "object"
    },
    "WordList": {
      "properties": {
        "Name": {
          "type": "string"
        },
        "Words": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "BackgroundColor": {
          "type": "string"
        },
        "TextColor": {
          "type": "string"
        },
        "HighlightName": {
          "type": "string"
        },
        "IsActive": {
          "type": "integer",
          "format": "int32"
        },
        "CreatedBy": {
          "type": "integer",
          "format": "int32"
        },
        "CreatedDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "WordList"
      },
      "type": "object"
    },
    "WordListCreate": {
      "properties": {
        "Name": {
          "type": "string"
        },
        "Words": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "BackgroundColor": {
          "type": "string"
        },
        "TextColor": {
          "type": "string"
        },
        "HighlightName": {
          "type": "string"
        },
        "IsActive": {
          "type": "integer",
          "format": "int32"
        },
        "CreatedBy": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "WordListCreate"
      },
      "type": "object"
    },
    "WorkFolderCreate": {
      "properties": {
        "Name": {
          "type": "string"
        },
        "ACLs": {
          "items": {
            "$ref": "#/definitions/AccessControlWorkFolder"
          },
          "xml": {
            "name": "AccessControlWorkFolder",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "WorkFolderCreate"
      },
      "type": "object"
    },
    "AccessControlWorkFolder": {
      "properties": {
        "Type": {
          "type": "integer",
          "format": "int32"
        },
        "Value": {
          "type": "integer",
          "format": "int32"
        },
        "ReadOnly": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "AccessControlWorkFolder"
      },
      "type": "object"
    }
  },
  "securityDefinitions": {
    "InControlAuthToken": {
      "type": "apiKey",
      "description": "API Session Token",
      "name": "InControlAuthToken",
      "in": "header"
    }
  },
  "tags": [
    {
      "name": "Archive"
    },
    {
      "name": "Cases"
    },
    {
      "name": "Clients"
    },
    {
      "name": "Company"
    },
    {
      "name": "DataLoading"
    },
    {
      "name": "Document"
    },
    {
      "name": "DocumentTextSet"
    },
    {
      "name": "Field"
    },
    {
      "name": "FieldMapping"
    },
    {
      "name": "FieldProfile"
    },
    {
      "name": "Groups"
    },
    {
      "name": "ImageSet"
    },
    {
      "name": "ImportBatch"
    },
    {
      "name": "Indexing"
    },
    {
      "name": "JobDownloadManagement"
    },
    {
      "name": "License"
    },
    {
      "name": "Login"
    },
    {
      "name": "NexLP"
    },
    {
      "name": "Processing"
    },
    {
      "name": "S3Upload"
    },
    {
      "name": "TagPane"
    },
    {
      "name": "TagProfile"
    },
    {
      "name": "Tags"
    },
    {
      "name": "TagSets"
    },
    {
      "name": "Team"
    },
    {
      "name": "Users"
    },
    {
      "name": "Version"
    },
    {
      "name": "WordList"
    },
    {
      "name": "WorkFolder"
    }
  ]
}
